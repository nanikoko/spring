/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.78
 * Generated at: 2022-07-09 00:16:15 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp.egovframework.com.ext.msg;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.Random;

public final class EgovMessengerMain_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(8);
    _jspx_dependants.put("jar:file:/D:/A_TeachingMaterial/08_Framework/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp1/wtpwebapps/DDIT.WebSocket/WEB-INF/lib/standard-1.1.2.jar!/META-INF/c.tld", Long.valueOf(1098678690000L));
    _jspx_dependants.put("jar:file:/D:/A_TeachingMaterial/08_Framework/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp1/wtpwebapps/DDIT.WebSocket/WEB-INF/lib/spring-webmvc-4.3.22.RELEASE.jar!/META-INF/spring-form.tld", Long.valueOf(1546991294000L));
    _jspx_dependants.put("/WEB-INF/lib/egovframework.rte.ptl.mvc-3.9.0.jar", Long.valueOf(1657325505617L));
    _jspx_dependants.put("jar:file:/D:/A_TeachingMaterial/08_Framework/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp1/wtpwebapps/DDIT.WebSocket/WEB-INF/lib/spring-webmvc-4.3.22.RELEASE.jar!/META-INF/spring.tld", Long.valueOf(1546991294000L));
    _jspx_dependants.put("/WEB-INF/lib/spring-webmvc-4.3.22.RELEASE.jar", Long.valueOf(1657325521047L));
    _jspx_dependants.put("jar:file:/D:/A_TeachingMaterial/08_Framework/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp1/wtpwebapps/DDIT.WebSocket/WEB-INF/lib/standard-1.1.2.jar!/META-INF/fn.tld", Long.valueOf(1098678690000L));
    _jspx_dependants.put("jar:file:/D:/A_TeachingMaterial/08_Framework/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp1/wtpwebapps/DDIT.WebSocket/WEB-INF/lib/egovframework.rte.ptl.mvc-3.9.0.jar!/META-INF/taglib.tld", Long.valueOf(1578030854000L));
    _jspx_dependants.put("/WEB-INF/lib/standard-1.1.2.jar", Long.valueOf(1657325575428L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.Random");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar.release();
    _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      if (_jspx_meth_c_005fset_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageTitle}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" main</title><!--WebSocket messenger main-->\r\n");
      out.write("<link type=\"text/css\" rel=\"stylesheet\" href=\"");
      if (_jspx_meth_c_005furl_005f0(_jspx_page_context))
        return;
      out.write("\"/>\r\n");
      out.write("<script  src=\"http://code.jquery.com/jquery-latest.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<!-- <script src=\"resource/js/json2.js\"></script>-->\r\n");
      out.write("<script>\r\n");
      out.write("	//chat 팝업창을 여러개 띄우기 위함	\r\n");
      out.write("	var webSocket = null;\r\n");
      out.write("	$(document).ready(function() {\r\n");
      out.write("		var url = 'ws://' + window.location.host + '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/usersServerEndpoint';\r\n");
      out.write("		webSocket = connection(url);\r\n");
      out.write("		var connectionType;\r\n");
      out.write("		\r\n");
      out.write("		webSocket.onopen = function(){ processOpen(); };\r\n");
      out.write("		webSocket.onmessage = function(message) { processMessage(message); };\r\n");
      out.write("		webSocket.onerror = function(message) { processError(message); };\r\n");
      out.write("		\r\n");
      out.write("	});\r\n");
      out.write("	//var webSocket = new WebSocket('ws://' + window.location.host + '/egov-messenger/usersServerEndpoint');\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	function connection(url) {\r\n");
      out.write("		var webSocket = null;\r\n");
      out.write("		if ('WebSocket' in window) {\r\n");
      out.write("			webSocket = new WebSocket(url);\r\n");
      out.write("		} else if ('MozWebSocket' in window) {\r\n");
      out.write("			webSocket = new MozWebSocket(url);\r\n");
      out.write("		} else {\r\n");
      out.write("			Console.log('Error: WebSocket is not supported by this browser.');\r\n");
      out.write("            return null;\r\n");
      out.write("		}\r\n");
      out.write("		return webSocket;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	function processOpen() {\r\n");
      out.write("		connectionType = \"firstConnection\";\r\n");
      out.write("		username = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginVO.name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("		webSocket.send(JSON.stringify({ \"connectionType\" : connectionType, \"username\" : username }));\r\n");
      out.write("	}\r\n");
      out.write("		\r\n");
      out.write("	//server에서 메시지가 넘어왔을때\r\n");
      out.write("	function processMessage(message) {\r\n");
      out.write("		var jsonData = JSON.parse(message.data);\r\n");
      out.write("		\r\n");
      out.write("		if (jsonData.allUsers != null) {\r\n");
      out.write("			//다른 사용자 접속 시,\r\n");
      out.write("			displayUsers(jsonData.allUsers);\r\n");
      out.write("		} \r\n");
      out.write("		\r\n");
      out.write("		if (jsonData.disconnectedUser != null) {\r\n");
      out.write("			//다른 사용자가 접속을 끊을 때,\r\n");
      out.write("			$(\"#\"+jsonData.disconnectedUser).remove();\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		//다른 사용자와 대화하고자 시도할 때, 채팅창을 팝업\r\n");
      out.write("		if (jsonData.enterChatId != null) {\r\n");
      out.write("			var roomId = jsonData.enterChatId;\r\n");
      out.write("			$(\"#roomId\").val(roomId);\r\n");
      out.write("			$(\"#username\").val(jsonData.username);\r\n");
      out.write("			openPopup(roomId);\r\n");
      out.write("		}\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	function openPopup(roomId) {\r\n");
      out.write("		var popOptions = \"width= 500, height= 700, resizable=yes, status= no, scrollbar= yes\"; \r\n");
      out.write("		var targetTitle = random(roomId); //두명의 사용자가 다른 팝업으로 뜨기 위해서 targetTitle을 랜덤으로 만들어준다.\r\n");
      out.write("		popupPost(\"");
      if (_jspx_meth_c_005furl_005f1(_jspx_page_context))
        return;
      out.write("\", targetTitle, popOptions);\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	function popupPost(url, target, option) {\r\n");
      out.write("		window.open(\"\", target, option);\r\n");
      out.write("		\r\n");
      out.write("		var form = $(\"form[name=usersForm]\");\r\n");
      out.write("		form.attr(\"target\", target);\r\n");
      out.write("		form.attr(\"action\", url);\r\n");
      out.write("		form.attr(\"method\", \"post\");\r\n");
      out.write("		form.submit();\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	function displayUsers(userList) {\r\n");
      out.write("		var username;\r\n");
      out.write("		$(\"#users tr:not(:first)\").remove();\r\n");
      out.write("		for (var i=0; i<userList.length; i++) {\r\n");
      out.write("			if(\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginVO.name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"==userList[i]) {\r\n");
      out.write("				username = userList[i]+\"(me!)\";\r\n");
      out.write("			} else{\r\n");
      out.write("				username = userList[i];\r\n");
      out.write("			}\r\n");
      out.write("			$.newTr = $(\"<tr id=\"+userList[i]+\" onclick='trClick(this)'><td>\"+username+\"</td></tr>\");\r\n");
      out.write("			//append\r\n");
      out.write("			$(\"#users\").last().append($.newTr);\r\n");
      out.write("			\r\n");
      out.write("		}\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	//다른 사용자 선택 시, 선택한 사용자 값을 서버에 전달\r\n");
      out.write("	function trClick(selectedTr) {\r\n");
      out.write("		if (selectedTr.id != null) {\r\n");
      out.write("				connectionType = \"chatConnection\";\r\n");
      out.write("				webSocket.send(JSON.stringify({ \"connectionType\" : connectionType, \"connectingUser\" : selectedTr.id }));\r\n");
      out.write("			}\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	function random(roomId) {\r\n");
      out.write("		");

			String rUid = "";
		
			for(int i=0; i<8; i++) {
				rUid += (char)((new Random().nextDouble()*26)+97);//KISA 보안약점 조치 (2018-10-29, 윤창원)
			}
		
      out.write("\r\n");
      out.write("		return roomId+\".\"+\"");
      out.print(rUid);
      out.write("\";\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	function processError(message) {\r\n");
      out.write("		/* messagesTextArea.value += \"error...\\n\"; */\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("	window.onbeforeunload = function() {\r\n");
      out.write("		webSocket.close();\r\n");
      out.write("	};\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<!-- <textarea id=\"messagesTextArea\" readonly=\"readonly\" rows=\"10\" cols=\"45\"></textarea>\r\n");
      out.write("	<textarea id=\"usersTextArea\" readonly=\"readonly\" rows=\"10\" cols=\"10\"></textarea>\r\n");
      out.write("	<br />\r\n");
      out.write("	<br />\r\n");
      out.write("	<input id=\"textMessage\" type=\"text\" size=\"50\" />\r\n");
      out.write("	<select id=\"locationSelect\">\r\n");
      out.write("		<option value=\"US\">US</option>\r\n");
      out.write("		<option value=\"Canada\">Canada</option>\r\n");
      out.write("		<option value=\"Other\">Other</option>\r\n");
      out.write("	</select> -->\r\n");
      out.write("	<form name=\"usersForm\">\r\n");
      out.write("		<input type=\"hidden\" id=\"roomId\" name=\"roomId\"/>\r\n");
      out.write("		<input type=\"hidden\" id=\"username\" name=\"username\"/>\r\n");
      out.write("	<br/>\r\n");
      out.write("	<div id=\"content\">Web MESSENGER!!</div>\r\n");
      out.write("	");
      if (_jspx_meth_spring_005fmessage_005f1(_jspx_page_context))
        return;
      out.write(" <br/><!-- 본인 외의 대화상태를 선택하면 대화창이 뜹니다. -->\r\n");
      out.write("	<!-- List -->\r\n");
      out.write("	<table id=\"users\" name=\"users\" cellspacing='0'><!-- cellspacing='0' is important, must stay -->\r\n");
      out.write("    	<tr><th>Web Messenger Users</th></tr><!-- Table Header -->\r\n");
      out.write("    	<tr><td>There is no one to chat</td></tr>\r\n");
      out.write("    </table>\r\n");
      out.write("	</form>\r\n");
      out.write("	<a href=\"/cop/msg/session.do?username=test\" target=\"_session\">session create</a>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fset_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f0_reused = false;
    try {
      _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f0.setParent(null);
      // /WEB-INF/jsp/egovframework/com/ext/msg/EgovMessengerMain.jsp(9,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setVar("pageTitle");
      int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
      if (_jspx_eval_c_005fset_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        if (_jspx_eval_c_005fset_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
          out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_c_005fset_005f0);
        }
        do {
          if (_jspx_meth_spring_005fmessage_005f0(_jspx_th_c_005fset_005f0, _jspx_page_context))
            return true;
          int evalDoAfterBody = _jspx_th_c_005fset_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
        if (_jspx_eval_c_005fset_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
          out = _jspx_page_context.popBody();
        }
      }
      if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar.reuse(_jspx_th_c_005fset_005f0);
      _jspx_th_c_005fset_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fset_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f0 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f0_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f0.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fset_005f0);
      // /WEB-INF/jsp/egovframework/com/ext/msg/EgovMessengerMain.jsp(9,23) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f0.setCode("comExtMsg.webSocket.Title");
      int[] _jspx_push_body_count_spring_005fmessage_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f0 = _jspx_th_spring_005fmessage_005f0.doStartTag();
        if (_jspx_th_spring_005fmessage_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f0);
      _jspx_th_spring_005fmessage_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f0, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f0 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f0_reused = false;
    try {
      _jspx_th_c_005furl_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f0.setParent(null);
      // /WEB-INF/jsp/egovframework/com/ext/msg/EgovMessengerMain.jsp(16,45) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f0.setValue("/css/egovframework/com/ext/msg/table.css");
      int _jspx_eval_c_005furl_005f0 = _jspx_th_c_005furl_005f0.doStartTag();
      if (_jspx_th_c_005furl_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f0);
      _jspx_th_c_005furl_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f0, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f1 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f1_reused = false;
    try {
      _jspx_th_c_005furl_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f1.setParent(null);
      // /WEB-INF/jsp/egovframework/com/ext/msg/EgovMessengerMain.jsp(81,13) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f1.setValue("/cop/msg/websocketMessengePopup.do");
      int _jspx_eval_c_005furl_005f1 = _jspx_th_c_005furl_005f1.doStartTag();
      if (_jspx_th_c_005furl_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f1);
      _jspx_th_c_005furl_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f1, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f1 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f1_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f1.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f1.setParent(null);
      // /WEB-INF/jsp/egovframework/com/ext/msg/EgovMessengerMain.jsp(155,1) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f1.setCode("comExtMsg.webSocketMain.msg");
      int[] _jspx_push_body_count_spring_005fmessage_005f1 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f1 = _jspx_th_spring_005fmessage_005f1.doStartTag();
        if (_jspx_th_spring_005fmessage_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f1[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f1.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f1.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f1);
      _jspx_th_spring_005fmessage_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f1, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f1_reused);
    }
    return false;
  }
}
