/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.78
 * Generated at: 2022-07-05 06:57:28 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class detail_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("jar:file:/D:/A_TeachingMaterial/08_Framework/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/spring_bootstrap/WEB-INF/lib/jstl-1.2.jar!/META-INF/fmt.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1654582322278L));
    _jspx_dependants.put("/WEB-INF/views/board/./reply_js.jsp", Long.valueOf(1655198197166L));
    _jspx_dependants.put("jar:file:/D:/A_TeachingMaterial/08_Framework/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/spring_bootstrap/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvalue_005fpattern_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvalue_005fpattern_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvalue_005fpattern_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<title>게시글 상세</title>\n");
      out.write("\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("  <!-- Content Wrapper. Contains page content -->\n");
      out.write("  <div>\n");
      out.write("   \n");
      out.write("   \n");
      out.write("	<section class=\"content-header\">\n");
      out.write("	  	<div class=\"container-fluid\">\n");
      out.write("	  		<div class=\"row md-2\">\n");
      out.write("	  			<div class=\"col-sm-6\">\n");
      out.write("	  				<h1>상세보기</h1>  				\n");
      out.write("	  			</div>\n");
      out.write("	  			<div class=\"col-sm-6\">\n");
      out.write("	  				<ol class=\"breadcrumb float-sm-right\">\n");
      out.write("			        <li class=\"breadcrumb-item\">\n");
      out.write("			        	<a href=\"list.do\">\n");
      out.write("				        	<i class=\"fa fa-dashboard\"></i>자유게시판\n");
      out.write("				        </a>\n");
      out.write("			        </li>\n");
      out.write("			        <li class=\"breadcrumb-item active\">\n");
      out.write("			        	상세보기\n");
      out.write("			        </li>		        \n");
      out.write("	    	  </ol>\n");
      out.write("	  			</div>\n");
      out.write("	  		</div>\n");
      out.write("	  	</div>\n");
      out.write("	</section>\n");
      out.write("	 \n");
      out.write("   \n");
      out.write("      <!-- Main content -->\n");
      out.write("    <section class=\"content container-fluid\">\n");
      out.write("		<div class=\"row\">\n");
      out.write("			<div class=\"col-md-12\">\n");
      out.write("				<div class=\"card card-outline card-info\">\n");
      out.write("					<div class=\"card-header\">\n");
      out.write("						<h3 class=\"card-title\">상세보기</h3>\n");
      out.write("						<div class=\"card-tools\">\n");
      out.write("							<button type=\"button\" id=\"modifyBtn\" class=\"btn btn-warning\" onclick=\"modify_go();\">MODIFY</button>						\n");
      out.write("						    <button type=\"button\" id=\"removeBtn\" class=\"btn btn-danger\" onclick=\"remove_go();\">REMOVE</button>\n");
      out.write("						    <button type=\"button\" id=\"listBtn\" class=\"btn btn-primary\" onclick=\"CloseWindow();\">CLOSE</button>\n");
      out.write("					    </div>\n");
      out.write("					</div>\n");
      out.write("					<div class=\"card-body\">\n");
      out.write("						<div class=\"form-group col-sm-12\">\n");
      out.write("							<label for=\"title\">제 목</label>\n");
      out.write("							<input type=\"text\" class=\"form-control\" id=\"title\" readonly disabled value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.title }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" />							\n");
      out.write("						</div>\n");
      out.write("						<div class=\"row\">	\n");
      out.write("							<div class=\"form-group col-sm-4\" >\n");
      out.write("								<label for=\"writer\">작성자</label>\n");
      out.write("								<input type=\"text\" class=\"form-control\" id=\"writer\" readonly value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.writer }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"/>\n");
      out.write("							</div>		\n");
      out.write("							\n");
      out.write("							<div class=\"form-group col-sm-4\" >\n");
      out.write("								<label for=\"regDate\">작성일</label>\n");
      out.write("								<input type=\"text\" class=\"form-control\" id=\"regDate\" readonly \n");
      out.write("									value=\"");
      if (_jspx_meth_fmt_005fformatDate_005f0(_jspx_page_context))
        return;
      out.write("\" />\n");
      out.write("							\n");
      out.write("							</div>\n");
      out.write("							<div class=\"form-group col-sm-4\" >\n");
      out.write("								<label for=\"viewcnt\">조회수</label>\n");
      out.write("								<input type=\"text\" class=\"form-control\" id=\"viewcnt\" readonly value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.viewcnt }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"/>\n");
      out.write("							</div>\n");
      out.write("						</div>		\n");
      out.write("						<div class=\"form-group col-sm-12\">\n");
      out.write("							<label for=\"content\">내 용</label>\n");
      out.write("							<div id=\"content\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.content }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</div>	\n");
      out.write("						</div>\n");
      out.write("												\n");
      out.write("					</div>													\n");
      out.write("				</div><!-- end card -->				\n");
      out.write("			</div><!-- end col-md-12 -->\n");
      out.write("		</div><!-- end row  -->\n");
      out.write("    </section>\n");
      out.write("    <!-- /.content -->\n");
      out.write("        \n");
      out.write("    \n");
      out.write("    <!-- Reply content -->\n");
      out.write("    <section class=\"content container-fluid\">\n");
      out.write("    	<!-- reply component start --> \n");
      out.write("		<div class=\"row\">\n");
      out.write("			<div class=\"col-md-12\">\n");
      out.write("				<div class=\"card card-info\">					\n");
      out.write("					<div class=\"card-body\">\n");
      out.write("						<!-- The time line -->\n");
      out.write("						<div class=\"timeline\">\n");
      out.write("							<!-- timeline time label -->\n");
      out.write("							<div class=\"time-label\" id=\"repliesDiv\">\n");
      out.write("								<span class=\"bg-green\">Replies List </span>							\n");
      out.write("							</div>\n");
      out.write("							\n");
      out.write("							\n");
      out.write("						</div>\n");
      out.write("						<div class='text-center'>\n");
      out.write("							<ul id=\"pagination\" class=\"pagination justify-content-center m-0\" >\n");
      out.write("								\n");
      out.write("							</ul>\n");
      out.write("						</div>\n");
      out.write("					</div>\n");
      out.write("					<div class=\"card-footer\">\n");
      out.write("						<label for=\"newReplyText\">Reply Text</label>\n");
      out.write("						<input class=\"form-control\" type=\"text\"	placeholder=\"REPLY TEXT\" id=\"newReplyText\">\n");
      out.write("						<br/>\n");
      out.write("						<button type=\"button\" class=\"btn btn-primary\" id=\"replyAddBtn\" onclick=\"replyRegist_go();\">ADD REPLY</button>\n");
      out.write("					</div>				\n");
      out.write("				</div>			\n");
      out.write("				\n");
      out.write("			</div><!-- end col-md-12 -->\n");
      out.write("		</div><!-- end row -->\n");
      out.write("    </section>\n");
      out.write("  </div>\n");
      out.write("  <!-- /.content-wrapper -->\n");
      out.write("\n");
      out.write("<!-- Modal -->\n");
      out.write("<div id=\"modifyModal\" class=\"modal modal-default fade\" role=\"dialog\">\n");
      out.write("  <div class=\"modal-dialog\">\n");
      out.write("    <!-- Modal content-->\n");
      out.write("    <div class=\"modal-content\">\n");
      out.write("      <div class=\"modal-header\">\n");
      out.write("        <h4 class=\"modal-title\" style=\"display:none;\"></h4>\n");
      out.write("        <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>        \n");
      out.write("      </div>\n");
      out.write("      <div class=\"modal-body\" data-rno>\n");
      out.write("        <p><input type=\"text\" id=\"replytext\" class=\"form-control\"></p>\n");
      out.write("      </div>\n");
      out.write("      <div class=\"modal-footer\">\n");
      out.write("        <button type=\"button\" class=\"btn btn-info\" id=\"replyModBtn\" onclick=\"replyModify_go();\">Modify</button>\n");
      out.write("        <button type=\"button\" class=\"btn btn-danger\" id=\"replyDelBtn\" onclick=\"replyRemove_go();\">DELETE</button>\n");
      out.write("        <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Close</button>\n");
      out.write("      </div>\n");
      out.write("    </div>\n");
      out.write("  </div>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<form role=\"form\">\n");
      out.write("	<input type=\"hidden\" name=\"bno\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.bno }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" />\n");
      out.write("</form>\n");
      out.write("\n");
      out.write("<script>\n");
      out.write("\n");
      out.write("function modify_go(){\n");
      out.write("	var formObj = $(\"form[role='form']\");\n");
      out.write("	formObj.attr({\n");
      out.write("		'action':'modifyForm.do',\n");
      out.write("		'method':'post'\n");
      out.write("	});\n");
      out.write("	formObj.submit();\n");
      out.write("}\n");
      out.write("function remove_go(){\n");
      out.write("	var formObj = $(\"form[role='form']\");\n");
      out.write("	var answer = confirm(\"정말 삭제하시겠습니까?\");\n");
      out.write("	if(answer){		\n");
      out.write("		formObj.attr(\"action\", \"remove.do\");\n");
      out.write("		formObj.attr(\"method\", \"post\");\n");
      out.write("		formObj.submit();\n");
      out.write("	}\n");
      out.write("}\n");
      out.write("</script>\n");
      out.write("<script>\n");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      if (_jspx_meth_c_005fif_005f1(_jspx_page_context))
        return;
      out.write("</script>\n");
      out.write("\n");
      out.write("\n");
      out.write("<script src=\"https://cdnjs.cloudflare.com/ajax/libs/handlebars.js/4.7.7/handlebars.min.js\"  ></script>\n");
      out.write("<script type=\"text/x-handlebars-template\"  id=\"reply-list-template\" >\n");
      out.write("{{#each .}}\n");
      out.write("<div class=\"replyLi\" >\n");
      out.write("	<div class=\"user-block\">\n");
      out.write("		<img src=\"");
      out.print(request.getContextPath());
      out.write("/member/getPicture.do?id={{replyer}}\" class=\"img-circle img-bordered-sm\"/>\n");
      out.write("    </div>	\n");
      out.write("	<div class=\"timeline-item\" >\n");
      out.write("  		<span class=\"time\">\n");
      out.write("    		<i class=\"fa fa-clock\"></i>{{prettifyDate regdate}}\n");
      out.write("	 		<a class=\"btn btn-primary btn-xs {{rno}}-a\" id=\"modifyReplyBtn\" data-rno={{rno}}\n");
      out.write("				onclick=\"replyModifyModal_go('{{rno}}');\"				\n");
      out.write("				style=\"display:{{VisibleByLoginCheck replyer}};\"\n");
      out.write("	    		data-replyer={{replyer}} data-toggle=\"modal\" data-target=\"#modifyModal\">Modify</a>\n");
      out.write("  		</span>\n");
      out.write("	\n");
      out.write("  		<h3 class=\"timeline-header\"><strong style=\"display:none;\">{{rno}}</strong>{{replyer}}</h3>\n");
      out.write("  		<div class=\"timeline-body\" id=\"{{rno}}-replytext\">{{replytext}} </div>\n");
      out.write("	</div>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("{{/each}}\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("<script type=\"text/x-handlebars-template\"  id=\"reply-pagination-template\" >\n");
      out.write("<li class=\"paginate_button page-item\">\n");
      out.write("	<a href=\"1\" aria-controls=\"example2\" data-dt-idx=\"1\" tabindex=\"0\" class=\"page-link\">\n");
      out.write("		<i class='fas fa-angle-double-left'></i>\n");
      out.write("	</a>\n");
      out.write("</li>\n");
      out.write("<li class=\"paginate_button page-item\">\n");
      out.write("	<a href=\"{{#if prev}}{{prevPageNum}}{{/if}}\" aria-controls=\"example2\" data-dt-idx=\"1\" tabindex=\"0\" class=\"page-link\">\n");
      out.write("		<i class='fas fa-angle-left'></i>\n");
      out.write("	</a>\n");
      out.write("</li>\n");
      out.write("{{#each pageNum}}\n");
      out.write("<li class=\"paginate_button page-item {{signActive this}} \">\n");
      out.write("	<a href=\"javascript:getPage('");
      out.print(request.getContextPath());
      out.write("/replies/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.bno}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/{{this}}',{{this}});\" aria-controls=\"example2\" data-dt-idx=\"1\" tabindex=\"0\" class=\"page-link\">\n");
      out.write("		{{this}}\n");
      out.write("	</a>\n");
      out.write("</li>\n");
      out.write("{{/each}}\n");
      out.write("\n");
      out.write("<li class=\"paginate_button page-item \">\n");
      out.write("	<a href=\"{{#if next}}{{nextPageNum}}{{/if}}\" aria-controls=\"example2\" data-dt-idx=\"1\" tabindex=\"0\" class=\"page-link\">\n");
      out.write("		<i class='fas fa-angle-right'></i>\n");
      out.write("	</a>\n");
      out.write("</li>\n");
      out.write("<li class=\"paginate_button page-item\">\n");
      out.write("	<a href=\"{{realEndPage}}\" aria-controls=\"example2\" data-dt-idx=\"1\" tabindex=\"0\" class=\"page-link\">\n");
      out.write("		<i class='fas fa-angle-double-right'></i>\n");
      out.write("	</a>\n");
      out.write("</li>	\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("\n");
      out.write("<script>\n");
      out.write("var replyPage=1;\n");
      out.write("\n");
      out.write("window.onload=function(){\n");
      out.write("	getPage(\"");
      out.print(request.getContextPath());
      out.write("/replies/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.bno}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/\"+replyPage);\n");
      out.write("}\n");
      out.write("function getPage(pageInfo,page){\n");
      out.write("	if(page) replyPage = page;\n");
      out.write("	$.getJSON(pageInfo,function(data){	\n");
      out.write("		printData(data.replyList,$('#repliesDiv'),$('#reply-list-template'));\n");
      out.write("		printPagination(data.pageMaker,$('ul#pagination'),$('#reply-pagination-template'));\n");
      out.write("	});\n");
      out.write("}\n");
      out.write("\n");
      out.write("function printData(replyArr,target,templateObject){\n");
      out.write("	var template=Handlebars.compile(templateObject.html());\n");
      out.write("	var html = template(replyArr);	\n");
      out.write("	$('.replyLi').remove();\n");
      out.write("	target.after(html);\n");
      out.write("}\n");
      out.write("\n");
      out.write("Handlebars.registerHelper({\n");
      out.write("	\"prettifyDate\":function(timeValue){ //Handlbars에 날짜출력함수 등록\n");
      out.write("		var dateObj=new Date(timeValue);\n");
      out.write("		var year=dateObj.getFullYear();\n");
      out.write("		var month=dateObj.getMonth()+1;\n");
      out.write("		var date=dateObj.getDate();\n");
      out.write("		return year+\"/\"+month+\"/\"+date;\n");
      out.write("	},\n");
      out.write("	\"VisibleByLoginCheck\":function(replyer){\n");
      out.write("		var result=\"none\";		\n");
      out.write("		if(replyer == \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginUser.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\") result=\"visible\";		\n");
      out.write("		return result;						  \n");
      out.write("	},\n");
      out.write("	\"signActive\":function(pageNum){\n");
      out.write("		if(pageNum == replyPage) return 'active';\n");
      out.write("	}\n");
      out.write("});\n");
      out.write("\n");
      out.write("\n");
      out.write("/* pagination */\n");
      out.write("function printPagination(pageMaker,target,templateObject){\n");
      out.write("	var pageNumArray = new Array(pageMaker.endPage-pageMaker.startPage+1);\n");
      out.write("	for(var i=0;i<pageMaker.endPage-pageMaker.startPage+1;i++){\n");
      out.write("		pageNumArray[i]=pageMaker.startPage+i;\n");
      out.write("	}	\n");
      out.write("	pageMaker.pageNum=pageNumArray;  \n");
      out.write("	pageMaker.prevPageNum=pageMaker.startPage-1;\n");
      out.write("	pageMaker.nextPageNum=pageMaker.endPage+1;\n");
      out.write("	\n");
      out.write("	var template=Handlebars.compile(templateObject.html());	\n");
      out.write("	var html = template(pageMaker);	\n");
      out.write("	target.html(\"\").html(html);\n");
      out.write("}\n");
      out.write("\n");
      out.write("function replyRegist_go(){\n");
      out.write("	var replytext=$('#newReplyText').val();\n");
      out.write("	\n");
      out.write("	\n");
      out.write("	var data={\n");
      out.write("			\"bno\":\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.bno}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\",\n");
      out.write("			\"replyer\":\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginUser.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\",\n");
      out.write("			\"replytext\":replytext	\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	$.ajax({\n");
      out.write("		url:\"");
      out.print(request.getContextPath());
      out.write("/replies\",\n");
      out.write("		type:\"post\",\n");
      out.write("		data:JSON.stringify(data),	\n");
      out.write("		contentType:'application/json',\n");
      out.write("		success:function(data){\n");
      out.write("			//console.log(data);\n");
      out.write("			alert('댓글이 등록되었습니다.\\n마지막페이지로 이동합니다.');\n");
      out.write("			replyPage=data; //페이지이동\n");
      out.write("			getPage(\"");
      out.print(request.getContextPath());
      out.write("/replies/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.bno}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/\"+data); //리스트 출력\n");
      out.write("			$('#newReplyText').val(\"\");	\n");
      out.write("		},\n");
      out.write("		error:function(error){\n");
      out.write("			AjaxErrorSecurityRedirectHandler(error.status);	\n");
      out.write("		}\n");
      out.write("	});\n");
      out.write("	\n");
      out.write("}\n");
      out.write("\n");
      out.write("//댓글 수정 modal\n");
      out.write("function replyModifyModal_go(rno){\n");
      out.write("	//alert(rno);\n");
      out.write("	//alert($('div#'+rno+'-replytext').text());\n");
      out.write("	$('div#modifyModal div.modal-body #replytext').val($('div#'+rno+'-replytext').text());\n");
      out.write("	$('div#modifyModal div.modal-header h4.modal-title').text(rno);\n");
      out.write("}\n");
      out.write("\n");
      out.write("//댓글 수정.\n");
      out.write("function replyModify_go(){\n");
      out.write("	//alert(\"modify btn\");\n");
      out.write("	var rno=$('div#modifyModal h4.modal-title').text();\n");
      out.write("	var replytext=$('div#modifyModal #replytext').val();\n");
      out.write("	\n");
      out.write("	var sendData={\n");
      out.write("			\"rno\":rno,\n");
      out.write("			\"replytext\":replytext\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	$.ajax({\n");
      out.write("		url:\"");
      out.print(request.getContextPath());
      out.write("/replies/\"+rno,\n");
      out.write("		type:\"PUT\",\n");
      out.write("		data:JSON.stringify(sendData),\n");
      out.write("		contentType:\"application/json\",\n");
      out.write("		headers:{			\n");
      out.write("			\"X-HTTP-Method-Override\":\"PUT\"\n");
      out.write("		},\n");
      out.write("		success:function(result){\n");
      out.write("			alert(\"수정되었습니다.\");			\n");
      out.write("			getPage(\"");
      out.print(request.getContextPath());
      out.write("/replies/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.bno}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/\"+replyPage);\n");
      out.write("		},\n");
      out.write("		error:function(error){\n");
      out.write("			//alert('수정 실패했습니다.');\n");
      out.write("			AjaxErrorSecurityRedirectHandler(error.status);	\n");
      out.write("		},\n");
      out.write("		complete:function(){\n");
      out.write("			$('#modifyModal').modal('hide');\n");
      out.write("		}\n");
      out.write("	});\n");
      out.write("}\n");
      out.write("\n");
      out.write("function replyRemove_go(){\n");
      out.write("	//alert(\"delete btn\");\n");
      out.write("	\n");
      out.write("	var rno=$('.modal-title').text();\n");
      out.write("	\n");
      out.write("	$.ajax({\n");
      out.write("		url:\"");
      out.print(request.getContextPath());
      out.write("/replies/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.bno}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/\"+rno+\"/\"+replyPage,\n");
      out.write("		type:\"DELETE\",\n");
      out.write("		headers:{			\n");
      out.write("			\"X-HTTP-Method-Override\":\"DELETE\"\n");
      out.write("		},\n");
      out.write("		success:function(page){\n");
      out.write("			alert(\"삭제되었습니다.\");\n");
      out.write("			getPage(\"");
      out.print(request.getContextPath());
      out.write("/replies/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.bno}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/\"+page);\n");
      out.write("			replyPage=page;\n");
      out.write("		},\n");
      out.write("		error:function(error){\n");
      out.write("			//alert('삭제 실패했습니다.');\n");
      out.write("			AjaxErrorSecurityRedirectHandler(error.status);	\n");
      out.write("		},\n");
      out.write("		complete:function(){\n");
      out.write("			$('#modifyModal').modal('hide');\n");
      out.write("		}\n");
      out.write("	});\n");
      out.write("}\n");
      out.write("</script> \n");
      out.write("\n");
      out.write("\n");
      out.write("</body> \n");
      out.write(" \n");
      out.write(" \n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_fmt_005fformatDate_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:formatDate
    org.apache.taglibs.standard.tag.rt.fmt.FormatDateTag _jspx_th_fmt_005fformatDate_005f0 = (org.apache.taglibs.standard.tag.rt.fmt.FormatDateTag) _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvalue_005fpattern_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.FormatDateTag.class);
    boolean _jspx_th_fmt_005fformatDate_005f0_reused = false;
    try {
      _jspx_th_fmt_005fformatDate_005f0.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fformatDate_005f0.setParent(null);
      // /WEB-INF/views/board/detail.jsp(65,16) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fformatDate_005f0.setValue((java.util.Date) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.regDate }", java.util.Date.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      // /WEB-INF/views/board/detail.jsp(65,16) name = pattern type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fformatDate_005f0.setPattern("yyyy-MM-dd");
      int _jspx_eval_fmt_005fformatDate_005f0 = _jspx_th_fmt_005fformatDate_005f0.doStartTag();
      if (_jspx_th_fmt_005fformatDate_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvalue_005fpattern_005fnobody.reuse(_jspx_th_fmt_005fformatDate_005f0);
      _jspx_th_fmt_005fformatDate_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fformatDate_005f0, _jsp_getInstanceManager(), _jspx_th_fmt_005fformatDate_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /WEB-INF/views/board/detail.jsp(170,0) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${from eq 'modify'}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("	alert(\"수정되었습니다.\");\n");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f1_reused = false;
    try {
      _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f1.setParent(null);
      // /WEB-INF/views/board/detail.jsp(173,0) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${from eq 'remove'}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
      if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("	alert(\"삭제되었습니다.\");\n");
          out.write("	window.opener.location.reload();\n");
          out.write("	window.close();\n");
          int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
      _jspx_th_c_005fif_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f1_reused);
    }
    return false;
  }
}
